<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 1. com.hongsi.purchbook.mapper.ItemMapper 인터페이스 선언 -->
<!-- 2. root-context.xml <mybatis-spring:scan ~~ /> 태그로 기본 패키지 지정 -->
<!-- 3. com.hongsi.purchbook.mapper.ItemMapper.xml 실행 작성 - src/main/resources -->
<!-- <![CDATA[ 이 사이에 있는 것은 mybatis가 처리하지 않고 그대로 넘긴다. DB에서 처리되도록 ]]> -->

<mapper namespace="com.hongsi.purchbook.mapper.PurchbookMapper">
	<select id="list" resultType="com.hongsi.purchbook.vo.PurchbookVO">
	SELECT 	
		P.CNO,
		P.BUYDATE, 
		P.GUBUN,
		I.KNAME ITEM,		
		P.CONTENT,		
		P.QTY,		
		P.PRICE,
		P.PURSHOP,			
		P.INDATE,
		P.COMM
	FROM 
	(
	SELECT 
			CNO,
			TO_CHAR(BUYDATE, 'yyyy-MM-dd') BUYDATE,
			ITEM,
			GUBUN,
			CONTENT,		
			QTY,		
			PRICE,
			PURSHOP,			
			TO_CHAR(INDATE, 'yyyy-MM-dd')  INDATE,
			COMM,		
			RDATE,
			SUMQTY		
		FROM PURCHASE_BOOK
	) P,
	(
		SELECT KNAME, CODE FROM INGREDIENT
	) I
	WHERE P.ITEM = I.CODE
	ORDER BY P.BUYDATE ASC 
	</select>
	
	<select id="selectNonInDate" resultType="com.hongsi.purchbook.vo.PurchbookVO">		
	SELECT 	
		P.CNO,		
		P.BUYDATE, 
		I.KNAME ITEM, 
		P.GUBUN,
		P.CONTENT,		
		P.QTY,		
		P.PRICE,
		P.PURSHOP
	FROM 
	(
	SELECT 
			CNO,
			TO_CHAR(BUYDATE, 'yyyy-MM-dd') BUYDATE,
			ITEM,
			GUBUN,
			CONTENT,		
			QTY,		
			PRICE,
			PURSHOP	
		FROM PURCHASE_BOOK
		WHERE INDATE IS NULL
	) P,
	(
		SELECT KNAME, CODE FROM INGREDIENT
	) I
	WHERE P.ITEM = I.CODE
	ORDER BY P.BUYDATE DESC
	</select>
	
	<insert id="buyProcess">
	INSERT INTO PURCHASE_BOOK (
		CNO,
		BUYDATE,
		ITEM,
		GUBUN,
		CONTENT,
		QTY,				
		PRICE,	
		PURSHOP,		
		INDATE,
		COMM,
		BUYER,
		SUMQTY	
	) VALUES (
		PURCHASE_BOOK_PK.NEXTVAL,
		TO_DATE(#{buyDate},'YYYYMMDD'),
		#{item},
		#{gubun},
		#{content},
		#{qty},		
		#{price},
		#{purShop},
		TO_DATE(#{inDate},'YYYYMMDD'),
		#{comm},
		#{buyer},
		#{content} * #{qty}
	)
	</insert>
	
	<select id="selectIgdTotalList" resultType="com.hongsi.purchbook.vo.PurchbookVO">
	SELECT 	A.ITEM ITEM,
			B.KNAME KNAME,
			A.INTOTAL INTOTAL,
			A.OUTTOTAL OUTTOTAL,
			A.DISTOTAL DISTOTAL,
			(A.INTOTAL - A.OUTTOTAL - A.DISTOTAL) TOTAL
	FROM 
	(	SELECT 	ITEM,
				SUM(CASE WHEN GUBUN = '구매' THEN SUMQTY ELSE 0 END) INTOTAL,
				SUM(CASE WHEN GUBUN = '반품' THEN SUMQTY ELSE 0 END) OUTTOTAL,
				SUM(CASE WHEN GUBUN = '폐기' THEN SUMQTY ELSE 0 END) DISTOTAL
		FROM PURCHASE_BOOK
		GROUP BY ITEM
	) A
	INNER JOIN INGREDIENT B ON A.ITEM = B.CODE		
	</select>	
</mapper>
