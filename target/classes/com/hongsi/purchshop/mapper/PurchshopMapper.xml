<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 1. com.hongsi.purchshop.mapper.PurchshopMapper 인터페이스 선언 -->
<!-- 2. root-context.xml <mybatis-spring:scan ~~ /> 태그로 기본 패키지 지정 -->
<!-- 3. com.hongsi.purchshop.mapper.PurchshopMapper.xml 실행 작성 - src/main/resources -->
<!-- <![CDATA[ 이 사이에 있는 것은 mybatis가 처리하지 않고 그대로 넘긴다. DB에서 처리되도록 ]]> -->

<mapper namespace="com.hongsi.purchshop.mapper.PurchshopMapper">

	<sql id="sun_saturday">
		AND TO_DATE(ORDERDATE,'YYYY-MM-DD') 
		BETWEEN TO_DATE(TRUNC(SYSDATE, 'IW')-1,'YYYY-MM-DD') 
		AND TO_DATE(TRUNC(SYSDATE, 'IW')+5,'YYYY-MM-DD')
	</sql>
	
	<insert id="insertPurchshopOrder">
	INSERT INTO PURCHSHOP (
		CNO,
		ORDERDATE,
		ORI_250,
		ORI_500,
		ORI_1000,
		ERL_250,		
		ERL_500,		
		ERL_1000,	
		SNS_250,		
		SNS_500,
		SNS_1000,
		GUBUN,
		SALEPATH,
		ORDERER,
		COMM,
		MANAGER,
		GUBUNCODE,
		STATUS	
	) VALUES (
		PURCHSHOP_PK.NEXTVAL,
		#{orderDate},
		#{ori_250},
		#{ori_500},
		#{ori_1000},
		#{erl_250},
		#{erl_500},
		#{erl_1000},
		#{sns_250},
		#{sns_500},
		#{sns_1000},
		#{gubun},
		#{salePath},
		#{orderer},
		#{comm},
		#{manager},
		#{gubunCode},
		'order'
	)
	</insert>

	<!-- TO_DATE(#{orderDate},'YYYYMMDD'), -->
	
	<select id="selectItemTotSum" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 
		(SUM(ORI_250)*200)+(SUM(ORI_500)*500)+(SUM(ORI_1000)*1000) ORI_SUM,
		(SUM(ERL_250)*200)+(SUM(ERL_500)*500)+(SUM(ERL_1000)*1000) ERL_SUM,
		(SUM(SNS_250)*200)+(SUM(SNS_500)*500)+(SUM(SNS_1000)*1000) SNS_SUM
	FROM PURCHSHOP
	WHERE 1=1
	<include refid="sun_saturday" />
	</select>
	
	<select id="selectItemSum" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 
		SUM(ORI_250)  	ORI_250_SUM,
		SUM(ORI_500)  	ORI_500_SUM,
		SUM(ORI_1000)  	ORI_1000_SUM,
		SUM(ERL_250)	ERL_250_SUM,
		SUM(ERL_500)  	ERL_500_SUM,
		SUM(ERL_1000)  	ERL_1000_SUM,
		SUM(SNS_250)  	SNS_250_SUM,
		SUM(SNS_500)  	SNS_500_SUM,
		SUM(SNS_1000)  	SNS_1000_SUM
	FROM PURCHSHOP
	WHERE 1=1
	<include refid="sun_saturday" />
	</select>
	
	<select id="selectOrderList" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 	A.CNO, A.ORDERDATE, 
			A.ORI_250_ORDER || A.ORI_500_ORDER || A.ORI_1000_ORDER ORI_250_ORDER,
			A.ERL_250_ORDER || A.ERL_500_ORDER || A.ERL_1000_ORDER ERL_250_ORDER,
			A.SNS_250_ORDER || A.SNS_500_ORDER || A.SNS_1000_ORDER SNS_250_ORDER,
			A.ORDERER
	FROM (	
		SELECT 
			CNO,
			ORDERDATE, 		
			CASE WHEN ORI_250 > 0 
				THEN 'ORI_250 : '|| TO_CHAR(ORI_250,'999,999,999')||' 개, '
				ELSE ''
			END AS ORI_250_ORDER,
			CASE WHEN ORI_500 > 0 
				THEN 'ORI_500 : '|| TO_CHAR(ORI_500,'999,999,999')||' 개, '
				ELSE ''
			END AS ORI_500_ORDER,
			CASE WHEN ORI_1000 > 0 
				THEN 'ORI_1000 : '|| TO_CHAR(ORI_1000,'999,999,999')||' 개, '
				ELSE ''
			END AS ORI_1000_ORDER,		
			CASE WHEN ERL_250 > 0 
				THEN 'ERL_250 : '|| TO_CHAR(ERL_250,'999,999,999')||' 개, '
				ELSE ''
			END AS ERL_250_ORDER,
			CASE WHEN ERL_500 > 0 
				THEN 'ERL_500 : '|| TO_CHAR(ERL_500,'999,999,999')||' 개, '
				ELSE ''
			END AS ERL_500_ORDER,
			CASE WHEN ERL_1000 > 0 
				THEN 'ERL_1000 : '|| TO_CHAR(ERL_1000,'999,999,999')||' 개, '
				ELSE ''
			END AS ERL_1000_ORDER,
			CASE WHEN SNS_250 > 0 
				THEN 'SNS_250 : '|| TO_CHAR(SNS_250,'999,999,999')||' 개, '
				ELSE ''
			END AS SNS_250_ORDER,
			CASE WHEN SNS_500 > 0 
				THEN 'SNS_500 : '|| TO_CHAR(SNS_500,'999,999,999')||' 개, '
				ELSE ''
			END AS SNS_500_ORDER,
			CASE WHEN SNS_1000 > 0 
				THEN 'SNS_1000 : '|| TO_CHAR(SNS_1000,'999,999,999')||' 개'
				ELSE ''
			END AS SNS_1000_ORDER,
			ORDERER
		FROM PURCHSHOP
		WHERE 1=1	
		ORDER BY ORDERDATE
	) A
	</select>
	
	<select id="selectOrderListSuntSat" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 	A.CNO, A.ORDERDATE, A.gubun,
			A.ORI_250_ORDER || A.ORI_500_ORDER || A.ORI_1000_ORDER ORI_250_ORDER,
			A.ERL_250_ORDER || A.ERL_500_ORDER || A.ERL_1000_ORDER ERL_250_ORDER,
			A.SNS_250_ORDER || A.SNS_500_ORDER || A.SNS_1000_ORDER SNS_250_ORDER,
			A.ORDERER
	FROM (	
		SELECT 
			CNO,
			ORDERDATE, gubun, 		
			CASE WHEN ORI_250 > 0 
				THEN 'ORI_250 : '|| TO_CHAR(ORI_250,'999,999,999')||' 개, '
				ELSE ''
			END AS ORI_250_ORDER,
			CASE WHEN ORI_500 > 0 
				THEN 'ORI_500 : '|| TO_CHAR(ORI_500,'999,999,999')||' 개, '
				ELSE ''
			END AS ORI_500_ORDER,
			CASE WHEN ORI_1000 > 0 
				THEN 'ORI_1000 : '|| TO_CHAR(ORI_1000,'999,999,999')||' 개, '
				ELSE ''
			END AS ORI_1000_ORDER,		
			CASE WHEN ERL_250 > 0 
				THEN 'ERL_250 : '|| TO_CHAR(ERL_250,'999,999,999')||' 개, '
				ELSE ''
			END AS ERL_250_ORDER,
			CASE WHEN ERL_500 > 0 
				THEN 'ERL_500 : '|| TO_CHAR(ERL_500,'999,999,999')||' 개, '
				ELSE ''
			END AS ERL_500_ORDER,
			CASE WHEN ERL_1000 > 0 
				THEN 'ERL_1000 : '|| TO_CHAR(ERL_1000,'999,999,999')||' 개, '
				ELSE ''
			END AS ERL_1000_ORDER,
			CASE WHEN SNS_250 > 0 
				THEN 'SNS_250 : '|| TO_CHAR(SNS_250,'999,999,999')||' 개, '
				ELSE ''
			END AS SNS_250_ORDER,
			CASE WHEN SNS_500 > 0 
				THEN 'SNS_500 : '|| TO_CHAR(SNS_500,'999,999,999')||' 개, '
				ELSE ''
			END AS SNS_500_ORDER,
			CASE WHEN SNS_1000 > 0 
				THEN 'SNS_1000 : '|| TO_CHAR(SNS_1000,'999,999,999')||' 개'
				ELSE ''
			END AS SNS_1000_ORDER,
			ORDERER
		FROM PURCHSHOP
		WHERE 1=1
		AND 	STATUS ='order'
		<include refid="sun_saturday" />		
		ORDER BY ORDERDATE DESC
	) A
	</select>
	
	<select id="getWeekDay" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 
		TO_CHAR(A.SUNDAY,'YYYY-MM-DD (DY)','NLS_DATE_LANGUAGE=KOREAN') startDate, 
		TO_CHAR(A.SATURDAY,'YYYY-MM-DD (DY)','NLS_DATE_LANGUAGE=KOREAN') endDate, 
		TO_CHAR(A.TODAY,'YYYY-MM-DD (DY)','NLS_DATE_LANGUAGE=KOREAN') toDate 
	FROM 
	(
		SELECT TRUNC(SYSDATE, 'IW')-1 AS SUNDAY, 
			TRUNC(SYSDATE, 'IW')+5 AS SATURDAY,
			TRUNC(SYSDATE) AS TODAY
		FROM DUAL
	) A		
	</select>
	
	<insert id="insertProduct">
	INSERT INTO PURCHSHOP (
		CNO,
		ORDERDATE,
		ORI_250,
		ORI_500,
		ORI_1000,
		ERL_250,		
		ERL_500,		
		ERL_1000,	
		SNS_250,		
		SNS_500,
		SNS_1000,
		GUBUN,
		DDATE,
		COMM,
		MANAGER,
		GUBUNCODE,
		STATUS	
	) VALUES (
		PURCHSHOP_PK.NEXTVAL,
		#{orderDate},
		#{ori_250},
		#{ori_500},
		#{ori_1000},
		#{erl_250},
		#{erl_500},
		#{erl_1000},
		#{sns_250},
		#{sns_500},
		#{sns_1000},
		#{gubun},
		#{dDate},
		#{comm},
		#{manager},
		#{gubunCode},
		'product'
	)
	</insert>
	
	<select id="selectProductList" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 	A.CNO, A.ORDERDATE, 
			A.ORI_250_ORDER || A.ORI_500_ORDER || A.ORI_1000_ORDER ORI_250_ORDER,
			A.ERL_250_ORDER || A.ERL_500_ORDER || A.ERL_1000_ORDER ERL_250_ORDER,
			A.SNS_250_ORDER || A.SNS_500_ORDER || A.SNS_1000_ORDER SNS_250_ORDER,
			A.GUBUN
	FROM (	
		SELECT 	CNO,
				ORDERDATE,
				CASE WHEN ORI_250 > 0 
				THEN 'ORI_250 : '|| TO_CHAR(ORI_250,'999,999,999')||' 개, '
				ELSE ''
				END AS ORI_250_ORDER,
				CASE WHEN ORI_500 > 0 
					THEN 'ORI_500 : '|| TO_CHAR(ORI_500,'999,999,999')||' 개, '
					ELSE ''
				END AS ORI_500_ORDER,
				CASE WHEN ORI_1000 > 0 
					THEN 'ORI_1000 : '|| TO_CHAR(ORI_1000,'999,999,999')||' 개, '
					ELSE ''
				END AS ORI_1000_ORDER,		
				CASE WHEN ERL_250 > 0 
					THEN 'ERL_250 : '|| TO_CHAR(ERL_250,'999,999,999')||' 개, '
					ELSE ''
				END AS ERL_250_ORDER,
				CASE WHEN ERL_500 > 0 
					THEN 'ERL_500 : '|| TO_CHAR(ERL_500,'999,999,999')||' 개, '
					ELSE ''
				END AS ERL_500_ORDER,
				CASE WHEN ERL_1000 > 0 
					THEN 'ERL_1000 : '|| TO_CHAR(ERL_1000,'999,999,999')||' 개, '
					ELSE ''
				END AS ERL_1000_ORDER,
				CASE WHEN SNS_250 > 0 
					THEN 'SNS_250 : '|| TO_CHAR(SNS_250,'999,999,999')||' 개, '
					ELSE ''
				END AS SNS_250_ORDER,
				CASE WHEN SNS_500 > 0 
					THEN 'SNS_500 : '|| TO_CHAR(SNS_500,'999,999,999')||' 개, '
					ELSE ''
				END AS SNS_500_ORDER,
				CASE WHEN SNS_1000 > 0 
					THEN 'SNS_1000 : '|| TO_CHAR(SNS_1000,'999,999,999')||' 개'
					ELSE ''
				END AS SNS_1000_ORDER,
				GUBUN
		FROM 	PURCHSHOP
		WHERE 	STATUS = 'product'
		ORDER BY ORDERDATE DESC
	) A	
	</select>
	
	<select id="selectProductStock" resultType="com.hongsi.purchshop.vo.PurchshopVO">
	SELECT 	
		(A.IN_ORI_250_TOTAL-B.OUT_ORI_250_TOTAL) 	ORI_250_SUM,
		(A.IN_ORI_500_TOTAL-B.OUT_ORI_500_TOTAL) 	ORI_500_SUM,
		(A.IN_ORI_1000_TOTAL-B.OUT_ORI_1000_TOTAL) 	ORI_1000_SUM,
		(C.IN_ERL_250_TOTAL-D.OUT_ERL_250_TOTAL) 	ERL_250_SUM,
		(C.IN_ERL_500_TOTAL-D.OUT_ERL_500_TOTAL) 	ERL_500_SUM,
		(C.IN_ERL_1000_TOTAL-D.OUT_ERL_1000_TOTAL) 	ERL_1000_SUM,
		(E.IN_SNS_250_TOTAL-F.OUT_SNS_250_TOTAL) 	SNS_250_SUM,
		(E.IN_SNS_500_TOTAL-F.OUT_SNS_500_TOTAL) 	SNS_500_SUM,
		(E.IN_SNS_1000_TOTAL-F.OUT_SNS_1000_TOTAL) 	SNS_1000_SUM		
	FROM 
	(
		SELECT 	
				SUM(ORI_250) IN_ORI_250_TOTAL,
				SUM(ORI_500) IN_ORI_500_TOTAL,
				SUM(ORI_1000) IN_ORI_1000_TOTAL
		FROM PURCHSHOP
		WHERE GUBUNCODE = 'in'
	) A,
	(
		SELECT 	
				SUM(ORI_250) OUT_ORI_250_TOTAL,
				SUM(ORI_500) OUT_ORI_500_TOTAL,
				SUM(ORI_1000) OUT_ORI_1000_TOTAL
		FROM PURCHSHOP
		WHERE GUBUNCODE = 'out'
	) B,
	(
		SELECT 	
				SUM(ERL_250) IN_ERL_250_TOTAL,
				SUM(ERL_500) IN_ERL_500_TOTAL,
				SUM(ERL_1000) IN_ERL_1000_TOTAL
		FROM PURCHSHOP
		WHERE GUBUNCODE = 'in'
	) C,
	(
		SELECT 	
				SUM(ERL_250) OUT_ERL_250_TOTAL,
				SUM(ERL_500) OUT_ERL_500_TOTAL,
				SUM(ERL_1000) OUT_ERL_1000_TOTAL
		FROM PURCHSHOP
		WHERE GUBUNCODE = 'out'
	) D,
	(
		SELECT 	
				SUM(SNS_250) IN_SNS_250_TOTAL,
				SUM(SNS_500) IN_SNS_500_TOTAL,
				SUM(SNS_1000) IN_SNS_1000_TOTAL
		FROM PURCHSHOP
		WHERE GUBUNCODE = 'in'
	) E,
	(
		SELECT 	
				SUM(SNS_250) OUT_SNS_250_TOTAL,
				SUM(SNS_500) OUT_SNS_500_TOTAL,
				SUM(SNS_1000) OUT_SNS_1000_TOTAL
		FROM PURCHSHOP
		WHERE GUBUNCODE = 'out'
	) F
	</select>
	
	<select id="selectOrderByCno" resultType="com.hongsi.purchshop.vo.PurchshopVO">
		SELECT 
			CNO,			
			ORDERDATE,
			GUBUN,
			ORI_250,
			ORI_500,
			ORI_1000, 		
			ERL_250,
			ERL_500,
			ERL_1000,
			SNS_250,
			SNS_500,
			SNS_1000,
			ORDERER			
		FROM PURCHSHOP
		WHERE 1=1	
		AND CNO = #{cno}
	</select>	
	
</mapper>
