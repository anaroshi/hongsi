<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 1. com.hongsi.purchshop.mapper.PurchProductMapper 인터페이스 선언 -->
<!-- 2. root-context.xml <mybatis-spring:scan ~~ /> 태그로 기본 패키지 지정 -->
<!-- 3. com.hongsi.purchshop.mapper.PurchProductMapper.xml 실행 작성 - src/main/resources -->
<!-- <![CDATA[ 이 사이에 있는 것은 mybatis가 처리하지 않고 그대로 넘긴다. DB에서 처리되도록 ]]> -->

<mapper namespace="com.hongsi.purchshop.mapper.PurchProductMapper">

	<!-- 생산 정보 저장 -->
	<insert id="insertProduct">
	INSERT INTO PURCH_PRODUCT (
		CNO,
		PRODUCTDATE,
		ORI_250,
		ORI_500,
		ORI_1000,
		ERL_250,		
		ERL_500,		
		ERL_1000,	
		STC_250,		
		STC_500,
		STC_1000,
		GUBUN,
		COMM,
		MANAGER,
		GUBUNCODE,
		STATUS,
		FLAG
	) VALUES (
		PURCHPRODUCT_PK.NEXTVAL,
		#{productDate},
		#{ori_250},
		#{ori_500},
		#{ori_1000},
		#{erl_250},
		#{erl_500},
		#{erl_1000},
		#{stc_250},
		#{stc_500},
		#{stc_1000},
		#{gubun},
		#{comm},
		#{manager},
		#{gubunCode},
		'product',
		1
	)
	</insert>

	<!-- 생산 정보 리스트 -->
	<select id="selectProductList" resultType="com.hongsi.purchshop.vo.PurchProductVO">
	SELECT RNUM, 
			CNO, PRODUCTDATE, GUBUN,
			ORI_250, ORI_500, ORI_1000,
			ERL_250, ERL_500, ERL_1000,
			STC_250, STC_500, STC_1000,
			ORI_250_FORMAT, ERL_250_FORMAT, STC_250_FORMAT,
			COMM
	FROM
	(		
		SELECT ROWNUM RNUM,	
				A.CNO, A.PRODUCTDATE, A.GUBUN, 
				A.ORI_250, A.ORI_500, A.ORI_1000, 
				A.ERL_250, A.ERL_500, A.ERL_1000, 
				A.STC_250, A.STC_500, A.STC_1000,
				A.ORI_250_FORMAT || A.ORI_500_FORMAT || A.ORI_1000_FORMAT ORI_250_FORMAT,
				A.ERL_250_FORMAT || A.ERL_500_FORMAT || A.ERL_1000_FORMAT ERL_250_FORMAT,
				A.STC_250_FORMAT || A.STC_500_FORMAT || A.STC_1000_FORMAT STC_250_FORMAT,
				A.COMM
		FROM (	
			SELECT 	CNO, GUBUN,
					PRODUCTDATE, 
					ORI_250, ORI_500, ORI_1000, 
					ERL_250, ERL_500, ERL_1000, 
					STC_250, STC_500, STC_1000,
					CASE WHEN ORI_250 > 0 
					THEN 'ORI_250 : '|| TO_CHAR(ORI_250,'999,999,999')||' 개, '
					ELSE ''
					END AS ORI_250_FORMAT,
					CASE WHEN ORI_500 > 0 
						THEN 'ORI_500 : '|| TO_CHAR(ORI_500,'999,999,999')||' 개, '
						ELSE ''
					END AS ORI_500_FORMAT,
					CASE WHEN ORI_1000 > 0 
						THEN 'ORI_1000 : '|| TO_CHAR(ORI_1000,'999,999,999')||' 개, '
						ELSE ''
					END AS ORI_1000_FORMAT,		
					CASE WHEN ERL_250 > 0 
						THEN 'ERL_250 : '|| TO_CHAR(ERL_250,'999,999,999')||' 개, '
						ELSE ''
					END AS ERL_250_FORMAT,
					CASE WHEN ERL_500 > 0 
						THEN 'ERL_500 : '|| TO_CHAR(ERL_500,'999,999,999')||' 개, '
						ELSE ''
					END AS ERL_500_FORMAT,
					CASE WHEN ERL_1000 > 0 
						THEN 'ERL_1000 : '|| TO_CHAR(ERL_1000,'999,999,999')||' 개, '
						ELSE ''
					END AS ERL_1000_FORMAT,
					CASE WHEN STC_250 > 0 
						THEN 'STC_250 : '|| TO_CHAR(STC_250,'999,999,999')||' 개, '
						ELSE ''
					END AS STC_250_FORMAT,
					CASE WHEN STC_500 > 0 
						THEN 'STC_500 : '|| TO_CHAR(STC_500,'999,999,999')||' 개, '
						ELSE ''
					END AS STC_500_FORMAT,
					CASE WHEN STC_1000 > 0 
						THEN 'STC_1000 : '|| TO_CHAR(STC_1000,'999,999,999')||' 개'
						ELSE ''
					END AS STC_1000_FORMAT,
					COMM
			FROM 	PURCH_PRODUCT
			WHERE 	STATUS = 'product'
			AND 	FLAG != 4
			ORDER BY PRODUCTDATE DESC		
		) A	
	)
	WHERE 1=1
	AND 	RNUM BETWEEN #{startRow} AND #{endRow}	
	</select>

	<!-- 총 생산 건수 -->
	<select id="getProductTotalRow" resultType="java.lang.Integer">
	SELECT 	COUNT(*)
	FROM 	PURCH_PRODUCT
	WHERE 	STATUS = 'product'
	AND 	FLAG != 4
	</select>

	
	<!-- 	리스트 하단 합계 -->
	<select id="selectProductStock" resultType="com.hongsi.purchshop.vo.PurchProductVO">
	SELECT 	
	(A.IN_ORI_250_TOTAL-B.OUT_ORI_250_TOTAL) 	ORI_250_SUM,
	(A.IN_ORI_500_TOTAL-B.OUT_ORI_500_TOTAL) 	ORI_500_SUM,
	(A.IN_ORI_1000_TOTAL-B.OUT_ORI_1000_TOTAL) 	ORI_1000_SUM,
	(C.IN_ERL_250_TOTAL-D.OUT_ERL_250_TOTAL) 	ERL_250_SUM,
	(C.IN_ERL_500_TOTAL-D.OUT_ERL_500_TOTAL) 	ERL_500_SUM,
	(C.IN_ERL_1000_TOTAL-D.OUT_ERL_1000_TOTAL) 	ERL_1000_SUM,
	(E.IN_STC_250_TOTAL-F.OUT_STC_250_TOTAL) 	STC_250_SUM,
	(E.IN_STC_500_TOTAL-F.OUT_STC_500_TOTAL) 	STC_500_SUM,
	(E.IN_STC_1000_TOTAL-F.OUT_STC_1000_TOTAL) 	STC_1000_SUM		
	FROM 
	(
		SELECT 	
			NVL(SUM(ORI_250),0) IN_ORI_250_TOTAL,
			NVL(SUM(ORI_500),0) IN_ORI_500_TOTAL,
			NVL(SUM(ORI_1000),0) IN_ORI_1000_TOTAL
		FROM 	PURCH_PRODUCT
		WHERE 	GUBUNCODE = 'in'
		AND 	FLAG != 4
	) A,
	(
		SELECT 	
			NVL(SUM(ORI_250),0) OUT_ORI_250_TOTAL,
			NVL(SUM(ORI_500),0) OUT_ORI_500_TOTAL,
			NVL(SUM(ORI_1000),0) OUT_ORI_1000_TOTAL
		FROM 	PURCH_PRODUCT
		WHERE 	GUBUNCODE = 'out'
		AND 	FLAG != 4
	) B,
	(
		SELECT 	
			NVL(SUM(ERL_250),0) IN_ERL_250_TOTAL,
			NVL(SUM(ERL_500),0) IN_ERL_500_TOTAL,
			NVL(SUM(ERL_1000),0) IN_ERL_1000_TOTAL
		FROM 	PURCH_PRODUCT
		WHERE 	GUBUNCODE = 'in'
		AND 	FLAG != 4
	) C,
	(
		SELECT 	
			NVL(SUM(ERL_250),0) OUT_ERL_250_TOTAL,
			NVL(SUM(ERL_500),0) OUT_ERL_500_TOTAL,
			NVL(SUM(ERL_1000),0) OUT_ERL_1000_TOTAL
		FROM 	PURCH_PRODUCT
		WHERE 	GUBUNCODE = 'out'
		AND 	FLAG != 4
	) D,
	(
		SELECT 	
			NVL(SUM(STC_250),0) IN_STC_250_TOTAL,
			NVL(SUM(STC_500),0) IN_STC_500_TOTAL,
			NVL(SUM(STC_1000),0) IN_STC_1000_TOTAL
		FROM 	PURCH_PRODUCT
		WHERE 	GUBUNCODE = 'in'
		AND 	FLAG != 4
	) E,
	(
		SELECT 	
			NVL(SUM(STC_250),0) OUT_STC_250_TOTAL,
			NVL(SUM(STC_500),0) OUT_STC_500_TOTAL,
			NVL(SUM(STC_1000),0) OUT_STC_1000_TOTAL
		FROM 	PURCH_PRODUCT
		WHERE 	GUBUNCODE = 'out'
		AND 	FLAG != 4
	) F
	</select>
	
	<!-- 	생산 정보 가져오기 by CNO -->
	<select id="selectProductInfoByCno" resultType="com.hongsi.purchshop.vo.PurchProductVO">
	SELECT 
		CNO,
		PRODUCTDATE,
		ORI_250,
		ORI_500,
		ORI_1000,
		ERL_250,		
		ERL_500,		
		ERL_1000,	
		STC_250,		
		STC_500,
		STC_1000,
		GUBUN,
		COMM,
		MANAGER
	FROM	PURCH_PRODUCT
	WHERE	CNO = #{cno}	
	</select>
	
	<!-- 	생산 정보 삭제 -->
	<update id="deleteProductInfoByCno">
	UPDATE	PURCH_PRODUCT
	SET		FLAG = 4, UDATE = SYSDATE
	WHERE 	CNO = #{cno}
	</update>
	
	<!-- 생산정보 수정하기 by CNO --> 
	<update id="updateProductInfoByCno">
	UPDATE	PURCH_PRODUCT
	SET		PRODUCTDATE = #{productDate},
			ORI_250 = #{ori_250},
			ORI_500 = #{ori_500},
			ORI_1000 = #{ori_1000},
			ERL_250 = #{erl_250},		
			ERL_500 = #{erl_500},		
			ERL_1000 = #{erl_1000},	
			STC_250 = #{stc_250},		
			STC_500 = #{stc_500},
			STC_1000 = #{stc_1000},
			GUBUN = #{gubun},
			COMM = #{comm},
			MANAGER = #{manager},
			GUBUNCODE = #{gubunCode},
			FLAG = 2, 
			UDATE = SYSDATE
	WHERE 	CNO = #{cno}
	</update>

</mapper>
