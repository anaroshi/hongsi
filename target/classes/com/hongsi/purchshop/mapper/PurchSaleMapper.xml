<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<!-- 1. com.hongsi.purchshop.mapper.PurchSaleMapper 인터페이스 선언 -->
<!-- 2. root-context.xml <mybatis-spring:scan ~~ /> 태그로 기본 패키지 지정 -->
<!-- 3. com.hongsi.purchshop.mapper.PurchSaleMapper.xml 실행 작성 - src/main/resources -->
<!-- <![CDATA[ 이 사이에 있는 것은 mybatis가 처리하지 않고 그대로 넘긴다. DB에서 처리되도록 ]]> -->

<mapper namespace="com.hongsi.purchshop.mapper.PurchSaleMapper">

	<insert id="insertPurchsale">
	INSERT INTO PURCH_SALE (
		CNO,
		ORDER_CNO,
		SALEDATE,
		ORI_250,
		ORI_500,
		ORI_1000,
		ERL_250,		
		ERL_500,		
		ERL_1000,	
		SNS_250,		
		SNS_500,
		SNS_1000,
		GUBUN,
		PRICE,
		PAYMENTPATH,
		SALEPATH,
		DELEVERYDATE,
		DELEVERYPATH,
		ORDERER,
		COMM,
		MANAGER,
		GUBUNCODE,
		STATUS,
		FLAG
	) VALUES (
		PURCHSALE_PK.NEXTVAL,
		#{order_cno},
		#{saleDate},
		#{ori_250},
		#{ori_500},
		#{ori_1000},
		#{erl_250},
		#{erl_500},
		#{erl_1000},
		#{sns_250},
		#{sns_500},
		#{sns_1000},
		#{gubun},
		#{price},
		#{paymentPath},
		#{salePath},
		#{deleveryDate},
		#{deleveryPath},
		#{orderer},
		#{comm},
		#{manager},
		#{gubunCode},
		'sale',
		1
	)
	</insert>

	<select id="selectSaleList" resultType="com.hongsi.purchshop.vo.PurchSaleVO">
	SELECT 
		CNO,
		ORDER_CNO,
		SALEDATE,
		ORI_250,
		ORI_500,
		ORI_1000,
		ERL_250,		
		ERL_500,		
		ERL_1000,	
		SNS_250,		
		SNS_500,
		SNS_1000,
		GUBUN,
		PRICE,
		PAYMENTPATH,
		SALEPATH,
		DELEVERYDATE,
		DELEVERYPATH,
		ORDERER,
		COMM,
		MANAGER,
		GUBUNCODE,
		STATUS
	FROM 	PURCH_SALE
	WHERE 	STATUS = 'sale'
	AND 	FLAG != 4
	ORDER BY SALEDATE DESC	
	</select>
	
	<select id="getWeekDay" resultType="com.hongsi.purchshop.vo.PurchSaleVO">
	SELECT 
		TO_CHAR(A.SUNDAY,'YYYY-MM-DD (DY)','NLS_DATE_LANGUAGE=KOREAN') startDate, 
		TO_CHAR(A.SATURDAY,'YYYY-MM-DD (DY)','NLS_DATE_LANGUAGE=KOREAN') endDate, 
		TO_CHAR(A.TODAY,'YYYY-MM-DD (DY)','NLS_DATE_LANGUAGE=KOREAN') toDate 
	FROM 
	(
		SELECT TRUNC(SYSDATE, 'IW')-1 AS SUNDAY, 
			TRUNC(SYSDATE, 'IW')+5 AS SATURDAY,
			TRUNC(SYSDATE) AS TODAY
		FROM DUAL
	) A		
	</select>
	
	<select id="selectSaleStock" resultType="com.hongsi.purchshop.vo.PurchSaleVO">	
	SELECT 	
		(B.OUT_ORI_250_TOTAL-A.IN_ORI_250_TOTAL) 	ORI_250_SUM,
		(B.OUT_ORI_500_TOTAL-A.IN_ORI_500_TOTAL) 	ORI_500_SUM,
		(B.OUT_ORI_1000_TOTAL-A.IN_ORI_1000_TOTAL) 	ORI_1000_SUM,
		(D.OUT_ERL_250_TOTAL-C.IN_ERL_250_TOTAL) 	ERL_250_SUM,
		(D.OUT_ERL_500_TOTAL-C.IN_ERL_500_TOTAL) 	ERL_500_SUM,
		(D.OUT_ERL_1000_TOTAL-C.IN_ERL_1000_TOTAL) 	ERL_1000_SUM,
		(F.OUT_SNS_250_TOTAL-E.IN_SNS_250_TOTAL) 	SNS_250_SUM,
		(F.OUT_SNS_500_TOTAL-E.IN_SNS_500_TOTAL) 	SNS_500_SUM,
		(F.OUT_SNS_1000_TOTAL-E.IN_SNS_1000_TOTAL) 	SNS_1000_SUM	
	FROM 
	(
		SELECT 	
			NVL(SUM(ORI_250),0) IN_ORI_250_TOTAL,
			NVL(SUM(ORI_500),0) IN_ORI_500_TOTAL,
			NVL(SUM(ORI_1000),0) IN_ORI_1000_TOTAL
		FROM 	PURCH_SALE
		WHERE 	GUBUNCODE = 'in'
		AND 	FLAG != 4
	) A,
	(
		SELECT 	
			NVL(SUM(ORI_250),0) OUT_ORI_250_TOTAL,
			NVL(SUM(ORI_500),0) OUT_ORI_500_TOTAL,
			NVL(SUM(ORI_1000),0) OUT_ORI_1000_TOTAL
		FROM 	PURCH_SALE
		WHERE 	GUBUNCODE = 'out'
		AND 	FLAG != 4
	) B,
	(
		SELECT 	
			NVL(SUM(ERL_250),0) IN_ERL_250_TOTAL,
			NVL(SUM(ERL_500),0) IN_ERL_500_TOTAL,
			NVL(SUM(ERL_1000),0) IN_ERL_1000_TOTAL
		FROM 	PURCH_SALE
		WHERE 	GUBUNCODE = 'in'
		AND 	FLAG != 4
	) C,
	(
		SELECT 	
			NVL(SUM(ERL_250),0) OUT_ERL_250_TOTAL,
			NVL(SUM(ERL_500),0) OUT_ERL_500_TOTAL,
			NVL(SUM(ERL_1000),0) OUT_ERL_1000_TOTAL
		FROM 	PURCH_SALE
		WHERE 	GUBUNCODE = 'out'
		AND 	FLAG != 4
	) D,
	(
		SELECT 	
			NVL(SUM(SNS_250),0) IN_SNS_250_TOTAL,
			NVL(SUM(SNS_500),0) IN_SNS_500_TOTAL,
			NVL(SUM(SNS_1000),0) IN_SNS_1000_TOTAL
		FROM 	PURCH_SALE
		WHERE 	GUBUNCODE = 'in'
		AND 	FLAG != 4
	) E,
	(
		SELECT 	
			NVL(SUM(SNS_250),0) OUT_SNS_250_TOTAL,
			NVL(SUM(SNS_500),0) OUT_SNS_500_TOTAL,
			NVL(SUM(SNS_1000),0) OUT_SNS_1000_TOTAL
		FROM 	PURCH_SALE
		WHERE 	GUBUNCODE = 'out'
		AND 	FLAG != 4
	) F
	</select>
	
	<select id="selectStock" resultType="com.hongsi.purchshop.vo.PurchSaleVO">
	SELECT 	
		(PT.PORDUCT_ORI_250_SUM-SL.SALE_ORI_250_SUM) 	ORI_250_SUM,
		(PT.PORDUCT_ORI_500_SUM-SL.SALE_ORI_500_SUM) 	ORI_500_SUM,
		(PT.PORDUCT_ORI_1000_SUM-SL.SALE_ORI_1000_SUM) 	ORI_1000_SUM,
		(PT.PORDUCT_ERL_250_SUM-SL.SALE_ERL_250_SUM) 	ERL_250_SUM,
		(PT.PORDUCT_ERL_500_SUM-SL.SALE_ERL_500_SUM) 	ERL_500_SUM,
		(PT.PORDUCT_ERL_1000_SUM-SL.SALE_ERL_1000_SUM) 	ERL_1000_SUM,
		(PT.PORDUCT_SNS_250_SUM-SL.SALE_SNS_250_SUM) 	SNS_250_SUM,
		(PT.PORDUCT_SNS_500_SUM-SL.SALE_SNS_500_SUM) 	SNS_500_SUM,
		(PT.PORDUCT_SNS_1000_SUM-SL.SALE_SNS_1000_SUM) 	SNS_1000_SUM
	FROM 	
	(
		SELECT 	
			(A.IN_ORI_250_TOTAL-B.OUT_ORI_250_TOTAL) 	PORDUCT_ORI_250_SUM,
			(A.IN_ORI_500_TOTAL-B.OUT_ORI_500_TOTAL) 	PORDUCT_ORI_500_SUM,
			(A.IN_ORI_1000_TOTAL-B.OUT_ORI_1000_TOTAL) 	PORDUCT_ORI_1000_SUM,
			(C.IN_ERL_250_TOTAL-D.OUT_ERL_250_TOTAL) 	PORDUCT_ERL_250_SUM,
			(C.IN_ERL_500_TOTAL-D.OUT_ERL_500_TOTAL) 	PORDUCT_ERL_500_SUM,
			(C.IN_ERL_1000_TOTAL-D.OUT_ERL_1000_TOTAL) 	PORDUCT_ERL_1000_SUM,
			(E.IN_SNS_250_TOTAL-F.OUT_SNS_250_TOTAL) 	PORDUCT_SNS_250_SUM,
			(E.IN_SNS_500_TOTAL-F.OUT_SNS_500_TOTAL) 	PORDUCT_SNS_500_SUM,
			(E.IN_SNS_1000_TOTAL-F.OUT_SNS_1000_TOTAL) 	PORDUCT_SNS_1000_SUM		
		FROM 
		(
			SELECT 	
					NVL(SUM(ORI_250),0) IN_ORI_250_TOTAL,
					NVL(SUM(ORI_500),0) IN_ORI_500_TOTAL,
					NVL(SUM(ORI_1000),0) IN_ORI_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'in'
			AND 	FLAG != 4
		) A,
		(
			SELECT 	
					NVL(SUM(ORI_250),0) OUT_ORI_250_TOTAL,
					NVL(SUM(ORI_500),0) OUT_ORI_500_TOTAL,
					NVL(SUM(ORI_1000),0) OUT_ORI_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'out'
			AND 	FLAG != 4
		) B,
		(
			SELECT 	
					NVL(SUM(ERL_250),0) IN_ERL_250_TOTAL,
					NVL(SUM(ERL_500),0) IN_ERL_500_TOTAL,
					NVL(SUM(ERL_1000),0) IN_ERL_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'in'
			AND 	FLAG != 4
		) C,
		(
			SELECT 	
					NVL(SUM(ERL_250),0) OUT_ERL_250_TOTAL,
					NVL(SUM(ERL_500),0) OUT_ERL_500_TOTAL,
					NVL(SUM(ERL_1000),0) OUT_ERL_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'out'
			AND 	FLAG != 4
		) D,
		(
			SELECT 	
					NVL(SUM(SNS_250),0) IN_SNS_250_TOTAL,
					NVL(SUM(SNS_500),0) IN_SNS_500_TOTAL,
					NVL(SUM(SNS_1000),0) IN_SNS_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'in'
			AND 	FLAG != 4
		) E,
		(
			SELECT 	
					NVL(SUM(SNS_250),0) OUT_SNS_250_TOTAL,
					NVL(SUM(SNS_500),0) OUT_SNS_500_TOTAL,
					NVL(SUM(SNS_1000),0) OUT_SNS_1000_TOTAL
			FROM 	PURCH_PRODUCT
			WHERE 	GUBUNCODE = 'out'
			AND 	FLAG != 4
		) F
	) PT,
	(
		SELECT 	
			(A.IN_ORI_250_TOTAL-B.OUT_ORI_250_TOTAL) 	SALE_ORI_250_SUM,
			(A.IN_ORI_500_TOTAL-B.OUT_ORI_500_TOTAL) 	SALE_ORI_500_SUM,
			(A.IN_ORI_1000_TOTAL-B.OUT_ORI_1000_TOTAL) 	SALE_ORI_1000_SUM,
			(C.IN_ERL_250_TOTAL-D.OUT_ERL_250_TOTAL) 	SALE_ERL_250_SUM,
			(C.IN_ERL_500_TOTAL-D.OUT_ERL_500_TOTAL) 	SALE_ERL_500_SUM,
			(C.IN_ERL_1000_TOTAL-D.OUT_ERL_1000_TOTAL) 	SALE_ERL_1000_SUM,
			(E.IN_SNS_250_TOTAL-F.OUT_SNS_250_TOTAL) 	SALE_SNS_250_SUM,
			(E.IN_SNS_500_TOTAL-F.OUT_SNS_500_TOTAL) 	SALE_SNS_500_SUM,
			(E.IN_SNS_1000_TOTAL-F.OUT_SNS_1000_TOTAL) 	SALE_SNS_1000_SUM		
		FROM 
		
		(
			SELECT 	
					NVL(SUM(ORI_250),0) IN_ORI_250_TOTAL,
					NVL(SUM(ORI_500),0) IN_ORI_500_TOTAL,
					NVL(SUM(ORI_1000),0) IN_ORI_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'in'
			AND 	FLAG != 4
		) A,
		(
			SELECT 	
					NVL(SUM(ORI_250),0) OUT_ORI_250_TOTAL,
					NVL(SUM(ORI_500),0) OUT_ORI_500_TOTAL,
					NVL(SUM(ORI_1000),0) OUT_ORI_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'out'
			AND 	FLAG != 4
		) B,
		(
			SELECT 	
					NVL(SUM(ERL_250),0) IN_ERL_250_TOTAL,
					NVL(SUM(ERL_500),0) IN_ERL_500_TOTAL,
					NVL(SUM(ERL_1000),0) IN_ERL_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'in'
			AND 	FLAG != 4
		) C,
		(
			SELECT 	
					NVL(SUM(ERL_250),0) OUT_ERL_250_TOTAL,
					NVL(SUM(ERL_500),0) OUT_ERL_500_TOTAL,
					NVL(SUM(ERL_1000),0) OUT_ERL_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'out'
			AND 	FLAG != 4
		) D,
		(
			SELECT 	
					NVL(SUM(SNS_250),0) IN_SNS_250_TOTAL,
					NVL(SUM(SNS_500),0) IN_SNS_500_TOTAL,
					NVL(SUM(SNS_1000),0) IN_SNS_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'in'
			AND 	FLAG != 4
		) E,
		(
			SELECT 	
					NVL(SUM(SNS_250),0) OUT_SNS_250_TOTAL,
					NVL(SUM(SNS_500),0) OUT_SNS_500_TOTAL,
					NVL(SUM(SNS_1000),0) OUT_SNS_1000_TOTAL
			FROM 	PURCH_SALE
			WHERE 	GUBUNCODE = 'out'
			AND 	FLAG != 4
		) F
	) SL	
	</select>	

</mapper>
